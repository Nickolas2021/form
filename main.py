import streamlit as st
import pandas as pd
from datetime import datetime
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–∞–Ω–¥ Dota 2",
    page_icon="üéÆ",
    layout="wide"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ session state
def init_session_state():
    if 'games_data' not in st.session_state:
        st.session_state.games_data = []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä–º—ã –∫–æ–º–∞–Ω–¥—ã
def create_team_form(team_name, key_prefix):
    st.subheader(f"üìä –ö–æ–º–∞–Ω–¥–∞ {team_name}")
    
    # –î–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    with st.expander(f"–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã {team_name}", expanded=True):
        col1, col2 = st.columns(2)
        
        with col1:
            team_rank = st.number_input(f"–†–∞–Ω–≥ –∫–æ–º–∞–Ω–¥—ã {team_name}",  
                                            key=f"{key_prefix}_rank")
            
            team_prize = st.number_input(f"–ü—Ä–∏–∑–æ–≤—ã–µ {team_name} ($)", 
                                            key=f"{key_prefix}_prize")
            
            first_places = st.number_input(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–≤—ã—Ö –º–µ—Å—Ç {team_name}", 
                                            key=f"{key_prefix}_first")
        
        with col2:
            win_rate = st.number_input(f"–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥ –∫–æ–º–∞–Ω–¥—ã {team_name} (%)",  
                                            key=f"{key_prefix}_winrate")
            
            total_games = st.number_input(f"–í—Å–µ–≥–æ –∏–≥—Ä {team_name}",  
                                            key=f"{key_prefix}_games")
            
            team_region = st.selectbox(f"–†–µ–≥–∏–æ–Ω {team_name}", 
                                            ["Europe", "North America","South America", "Asia", "China", "SEA", "CIS", "Africa"], 
                                            key=f"{key_prefix}_region")
    
    # –î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–≤
    players_data = []
    
    for pos in range(1, 6):
        with st.expander(f"üë§ –ò–≥—Ä–æ–∫ –ø–æ–∑–∏—Ü–∏–∏ {pos}", expanded=False):
            col1, col2, col3, col4 = st.columns(4)
            
            with col1:
                player_hero = st.text_input(f"–ì–µ—Ä–æ–π —Å –∞—Å–ø–µ–∫—Ç–æ–º",  
                                          key=f"{key_prefix}_p{pos}_hero")
                
                player_age = st.number_input(f"–í–æ–∑—Ä–∞—Å—Ç",  
                                           key=f"{key_prefix}_p{pos}_age")
            
            with col2:
                player_winrate = st.number_input(f"–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥ (%)", 
                                            key=f"{key_prefix}_p{pos}_winrate")
                
                player_prize = st.number_input(f"–ü—Ä–∏–∑–æ–≤—ã–µ ($)",  
                                             key=f"{key_prefix}_p{pos}_prize")
            
            with col3:
                player_kda = st.number_input(f"KDA",  
                                            key=f"{key_prefix}_p{pos}_kda")
                
                player_rank = st.number_input(f"–†–∞–Ω–≥", 
                                                   key=f"{key_prefix}_p{pos}_rank")
                
            with col4:
                player_gold_in_min = st.number_input(f"–ó–æ–ª–æ—Ç–∞ –≤ –º–∏–Ω—É—Ç—É",
                                                     key=f"{key_prefix}_p{pos}_gold")
                player_exp_in_min = st.number_input(f"–û–ø—ã—Ç–∞ –≤ –º–∏–Ω—É—Ç—É",
                                                     key=f"{key_prefix}_p{pos}_exp")
                

        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
        player_data = {
            'position': pos,
            'hero': player_hero,
            'age': player_age,
            'winrate': player_winrate,
            'prize': player_prize,
            'kda': player_kda,
            'rank': player_rank,
            'gold': player_gold_in_min,
            'exp': player_exp_in_min
        }
        players_data.append(player_data)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    team_data = {
        'team_name': team_name,
        'rank': team_rank,
        'prize': team_prize,
        'first_places': first_places,
        'win_rate': win_rate,
        'total_games': total_games,
        'region': team_region,
        'players': players_data
    }
    
    return team_data

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–æ—Ä–º–∞—Ç
@st.cache_data
def convert_to_csv(games_data):
    rows = []
    
    for game in games_data:
        # –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ
        row = {
            'match_date': game['match_date'],
            'match_time': game['match_time']
        }
        
        # –î–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã Radiant
        radiant = game['radiant']
        row.update({
            'radiant_name': radiant['team_name'],
            'radiant_rank': radiant['rank'],
            'radiant_prize': radiant['prize'],
            'radiant_first_places': radiant['first_places'],
            'radiant_win_rate': radiant['win_rate'],
            'radiant_total_games': radiant['total_games'],
            'radiant_region': radiant['region']
        })
        
        # –î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–≤ Radiant
        for i, player in enumerate(radiant['players'], 1):
            row.update({
                f'radiant_p{i}_hero': player['hero'],
                f'radiant_p{i}_age': player['age'],
                f'radiant_p{i}_winrate': player['winrate'],
                f'radiant_p{i}_prize': player['prize'],
                f'radiant_p{i}_rank': player['rank'],
                f'radiant_p{i}_kda': player['kda'],
                f'radiant_p{i}_gold': player['gold'],
                f'radiant_p{i}_exp': player['exp']
            })
        
        # –î–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã Dire
        dire = game['dire']
        row.update({
            'dire_name': dire['team_name'],
            'dire_rank': dire['rank'],
            'dire_prize': dire['prize'],
            'dire_first_places': dire['first_places'],
            'dire_win_rate': dire['win_rate'],
            'dire_total_games': dire['total_games'],
            'dire_region': dire['region']
        })
        
        # –î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–≤ Dire
        for i, player in enumerate(dire['players'], 1):
            row.update({
                f'dire_p{i}_hero': player['hero'],
                f'dire_p{i}_age': player['age'],
                f'dire_p{i}_winrate': player['winrate'],
                f'dire_p{i}_prize': player['prize'],
                f'dire_p{i}_rank': player['rank'],
                f'dire_p{i}_kda': player['kda'],
                f'dire_p{i}_gold': player['gold'],
                f'dire_p{i}_exp': player['exp']
            })
        
        rows.append(row)
    
    df = pd.DataFrame(rows)
    return df.to_csv(index=False).encode('utf-8')

# –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
def main():
    init_session_state()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("üéÆ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–º–∞–Ω–¥ Dota 2")
    st.markdown("---")
    
    # –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞
    with st.form("match_stats_form"):
        st.subheader("‚öîÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ç—á–µ")
        
        # –û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∞
        col1, col2 = st.columns(2)
        with col1:
            match_date = st.date_input("–î–∞—Ç–∞ –º–∞—Ç—á–∞", value=datetime.now().date())
        with col2:
            match_time = st.time_input("–í—Ä–µ–º—è –º–∞—Ç—á–∞", value=datetime.now().time())
        
        st.markdown("---")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—ã –¥–ª—è –æ–±–µ–∏—Ö –∫–æ–º–∞–Ω–¥
        col1, col2 = st.columns(2)
        
        with col1:
            radiant_data = create_team_form("Radiant", "radiant")
        
        with col2:
            dire_data = create_team_form("Dire", "dire")
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
        submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∞", type="primary")
        
        if submitted:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∞
            match_data = {
                'match_date': match_date.strftime('%Y-%m-%d'),
                'match_time': match_time.strftime('%H:%M:%S'),
                'radiant': radiant_data,
                'dire': dire_data
            }
            
            st.session_state.games_data.append(match_data)
            st.success(f"‚úÖ –î–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(st.session_state.games_data)}")
            st.balloons()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if st.session_state.games_data:
        st.markdown("---")
        st.subheader("üìà –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        st.info(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–∞–Ω–æ –º–∞—Ç—á–µ–π: {len(st.session_state.games_data)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        with st.expander("üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π", expanded=False):
            for i, game in enumerate(reversed(st.session_state.games_data[-5:]), 1):
                st.write(f"**–ú–∞—Ç—á {len(st.session_state.games_data) - i + 1}:** {game['radiant']['team_name']} vs {game['dire']['team_name']} ({game['match_date']})")
        
        # –ö–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
        st.markdown("---")
        st.subheader("üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è CSV
            csv_data = convert_to_csv(st.session_state.games_data)
            st.download_button(
                label="üì• –°–∫–∞—á–∞—Ç—å CSV",
                data=csv_data,
                file_name=f"dota2_team_stats_{datetime.now().strftime('%Y%m%d_%H%M')}.csv",
                mime="text/csv",
                help="–°–∫–∞—á–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV –¥–ª—è –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"
            )
        
        with col2:
            # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ", help="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏"):
                st.session_state.games_data = []
                st.success("–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã!")
                st.rerun()
        
        with col3:
            # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–≤—å—é CSV
            if st.button("üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–≤—å—é CSV"):
                if st.session_state.games_data:
                    df = pd.read_csv(pd.io.common.BytesIO(csv_data))
                    st.dataframe(df.head(), use_container_width=True)

if __name__ == "__main__":
    main()
